package ${packagePrefix}controller.base;

import org.solar.bean.Constants;
import org.solar.bean.JsonResult;
import org.solar.bean.Page;
import org.solar.bean.Pageable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import ${packagePrefix}entity.${BeanName};
import ${packagePrefix}service.${BeanName}Service;
import javax.annotation.Resource;
import java.util.Date;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import org.solar.util.JsonUtil;
import org.solar.util.BeanUtil;

/**
 * @Description:
 * @author solar
 * @date ${Date}
 */
@Controller
@RequestMapping("${beanName}")
public class ${BeanName}CrudController extends BaseController {
    Logger logger=LoggerFactory.getLogger(${BeanName}CrudController.class);
    @Resource
    private ${BeanName}Service ${beanName}Service;
    @RequestMapping("/select")
    @ResponseBody
    public  JsonResult select(@RequestParam Map<String,String> requestMap) {
        //按id查询
        String id=requestMap.get("id");
        if (id!=null&&!"".equals(id)){
            ${BeanName} ${beanName}=${beanName}Service.getById(id);
            return JsonResult.success(${beanName});
        }
        //按分页查询
        String pageNum=requestMap.get("pageNum");
        if (pageNum!=null&&!"".equals(pageNum)){
            Pageable pageable=Pageable.getPageable(requestMap);
            Page page=${beanName}Service.selectPage(pageable);
//            List<${BeanName}> list=page.getList();
//            List parentIdList=BeanUtil.getProperties(list,"parentId");
//            List parentlist=${beanName}Service.selectByWhere("idList",parentIdList);
//            List<Map> resultList=BeanUtil.leftJoin(list,parentlist,"parentId","id",new HashMap());
//            page.setList(resultList);
            return JsonResult.success(page);
        }
        //按条件查询List
        return JsonResult.success(${beanName}Service.selectByWhere(requestMap));
    }
    @RequestMapping("/delete")
    @ResponseBody
    public  JsonResult delete(String id) {
        int row=${beanName}Service.delete(id);
        return JsonResult.success(row);
    }
    @RequestMapping("/saveOrUpdate")
    @ResponseBody
    public  JsonResult saveOrUpdate(@RequestBody Map requestMap) {
        ${BeanName} bean= JsonUtil.toJavaObject(requestMap,${BeanName}.class);
       //如果id不为空则更新
        Date nowTime=new Date();
        if (bean.getId()!=null&&!"".equals(bean.getId())){
            int row=${beanName}Service.updateByPrimaryKey(bean);
            return JsonResult.success(row);
        }
        int row=${beanName}Service.save(bean);
        return JsonResult.success(row);
    }


}
